{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","props","images","step","frameSize","itemWidth","animationDuration","infinite","useState","move","setMove","itemLength","setItemWidth","carouselWidth","length","useEffect","prevState","className","style","width","transform","transitionDuration","map","image","index","src","alt","toString","Math","random","type","onClick","prevPosition","App","state","ItemWidth","FrameSize","Step","AnimationDuration","this","action","method","onSubmit","event","preventDefault","htmlFor","id","name","placeholder","value","onChange","setState","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc42771a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\nexport const Carousel: React.FC<Props> = (props) => {\n  const {\n    images,\n    step,\n    frameSize,\n    itemWidth,\n    animationDuration,\n    infinite,\n  } = props;\n\n  const [move, setMove] = useState(0);\n  const [itemLength, setItemWidth] = useState(itemWidth);\n  const carouselWidth = images.length * itemLength;\n\n  useEffect(() => {\n    if (itemWidth !== itemLength) {\n      if (move !== 0) {\n        setMove(prevState => prevState - frameSize);\n      }\n\n      setItemWidth(itemWidth);\n    }\n  });\n  const handlerNext = () => {\n    if (move < -carouselWidth + step * itemLength) {\n      if (infinite) {\n        setMove(0);\n      }\n    } else {\n      setMove(prevPosition => prevPosition - step * itemLength);\n    }\n  };\n\n  const handlerPrev = () => {\n    if (move < 0) {\n      setMove(prevPosition => prevPosition + step * itemLength);\n    }\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${frameSize * itemLength}px`,\n      }}\n    >\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          transform: `translateX(${move}px)`,\n          transitionDuration: `${animationDuration}ms`,\n        }}\n      >\n        {images.map((image, index) => (\n          <li\n            key={Math.random()}\n            style={{ width: `${itemLength}px` }}\n          >\n            <figure\n              style={{ width: `${itemLength}px` }}\n            >\n              <img\n                className=\"Carousel__picture\"\n                src={image}\n                alt={(index + 1).toString()}\n                style={{ width: `${itemLength}px` }}\n              />\n            </figure>\n          </li>\n        ))}\n      </ul>\n      <button\n        className=\"Carousel__button button is-success\"\n        type=\"button\"\n        onClick={() => {\n          handlerPrev();\n        }}\n      >\n        Prev\n      </button>\n      <button\n        className=\"Carousel__button button is-warning\"\n        data-cy=\"next\"\n        type=\"button\"\n        onClick={() => {\n          handlerNext();\n        }}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport 'bulma/css/bulma.min.css';\n\ninterface State {\n  images: string[];\n  ItemWidth: number;\n  FrameSize: number;\n  Step: number;\n  AnimationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    ItemWidth: 130,\n    FrameSize: 3,\n    Step: 3,\n    AnimationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images,\n      ItemWidth,\n      FrameSize,\n      Step,\n      AnimationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"App__title title is-1\" data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={Step}\n          frameSize={FrameSize}\n          itemWidth={ItemWidth}\n          animationDuration={AnimationDuration}\n          infinite={false}\n        />\n\n        <form\n          action=\"/\"\n          method=\"POST\"\n          onSubmit={(event) => {\n            event.preventDefault();\n          }}\n        >\n          <div className=\"field\">\n            <label\n              htmlFor=\"itemWidth\"\n              className=\"label\"\n            >\n              Item Width:\n            </label>\n            <input\n              id=\"itemWidth\"\n              className=\"input\"\n              type=\"number\"\n              name=\"ItemWidth\"\n              placeholder=\"Enter an item Width\"\n              value={ItemWidth}\n              onChange={(event) => {\n                this.setState({\n                  ItemWidth: +event.target.value,\n                });\n              }}\n            />\n          </div>\n\n          <div className=\"field\">\n            <label\n              htmlFor=\"frameSize\"\n              className=\"label\"\n            >\n              Frame Size\n            </label>\n            <input\n              id=\"frameSize\"\n              className=\"input\"\n              type=\"number\"\n              name=\"FrameSize\"\n              placeholder=\"Enter a Frame Size\"\n              value={FrameSize}\n              onChange={event => {\n                this.setState({\n                  FrameSize: +event.target.value,\n                });\n              }}\n            />\n          </div>\n\n          <div className=\"field\">\n            <label\n              htmlFor=\"step\"\n              className=\"label\"\n            >\n              Step:\n            </label>\n            <input\n              id=\"step\"\n              className=\"input\"\n              type=\"number\"\n              name=\"Step\"\n              placeholder=\"Enter Step\"\n              value={Step}\n              onChange={event => {\n                this.setState({\n                  Step: +event.target.value,\n                });\n              }}\n            />\n          </div>\n\n          <div className=\"field\">\n            <label\n              htmlFor=\"animationDuration\"\n              className=\"label\"\n            >\n              AnimationDuration:\n            </label>\n            <input\n              id=\"animationDuration\"\n              className=\"input\"\n              type=\"number\"\n              name=\"AnimationDuration\"\n              placeholder=\"Enter an Animation Duration\"\n              value={AnimationDuration}\n              onChange={event => {\n                this.setState({\n                  AnimationDuration: +event.target.value,\n                });\n              }}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}